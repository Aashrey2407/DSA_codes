In an infinite sorted array, we have the left bound that is the first element but we cannot mark the upper bound. So we have to find the upper bound such that our target element is less than the upper bound. We cannot iterate through the array to find this upper bound because then the time complexity will become O(n). We want the most optimal solution in O(logn). What can we do? We can set the lower bound and upper bound initially as 0 and 1 indices. If the target is greater than the greater index element, we can make the left index equal to right index and double the right index. So we will be able to find the appropriate upper bound in at most logn steps. Once we have found the upper bound, just perform ordinary BS on this subarray.